# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - 'docs/**'
      - '.github/**'
      - 'README.md'
      - '.gitignore'
      - '.gitattributes'
      - 'CHANGELOG.md'
      - '.springjavaformatconfig'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - 'docs/**'
      - '.github/**'
      - 'README.md'
      - '.gitignore'
      - '.gitattributes'
      - 'CHANGELOG.md'
      - '.springjavaformatconfig'

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        java: [ '8' , '11' ,'17' ]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK ${{ matrix.Java }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.Java }}
        distribution: adopt
        cache: gradle
    #window环境checkFormat 命令会有不一样的结果，所以排除windows环境
    - name: Check spring-javaformat
      if: ${{ matrix.os != 'windows-latest' }}
      run: gradle checkFormat

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2

    - name: Execute Gradle build
      run: bash ./gradlew build -x test -Pnocheck --continue

